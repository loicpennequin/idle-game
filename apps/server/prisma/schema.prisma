generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @unique @default(cuid())
  email        String        @unique
  name         String?
  passwordHash String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  refreshToken RefreshToken?
  heroes       Hero[]
}

model RefreshToken {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  value     String   @unique @db.VarChar(200)
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Hero {
  id            String     @id @unique @default(cuid())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime?  @updatedAt
  name          String
  level         Int
  ownerId       String
  owner         User       @relation(fields: [ownerId], references: [id])
  joinedArenaAt DateTime?
  ArenaHero     ArenaHero?
}

model Arena {
  id        String      @id @unique @default(cuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  name      String      @unique
  maxSlots  Int
  size      Int
  minLevel  Int
  maxLevel  Int
  heroes    ArenaHero[]
}

model ArenaHero {
  id        String    @id @unique @default(cuid())
  joinedAt  DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  stats     Json
  heroId    String    @unique
  hero      Hero      @relation(fields: [heroId], references: [id])
  arenaId   String
  arena     Arena     @relation(fields: [arenaId], references: [id])
}
